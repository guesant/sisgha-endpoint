import { Field, InputType, Int } from '@nestjs/graphql';
import { SearchRequest } from 'src/common/interfaces/SearchRequest';
import { z } from 'zod';
import { GenericSearchInputZod } from '../../../../common/zod/GenericSearchInputZod';

export const List{{ pascalCase name }}InputZod = GenericSearchInputZod;

export type IList{{ pascalCase name }}Input = z.infer<typeof List{{ pascalCase name }}InputZod>;

@InputType('List{{ pascalCase name }}Input')
export class List{{ pascalCase name }}InputType implements SearchRequest, IList{{ pascalCase name }}Input {
  @Field(() => String, { nullable: true })
  query!: string;

  @Field(() => Int, { nullable: true })
  limit?: number;

  @Field(() => Int, { nullable: true })
  offset?: number;
}
