import { Field, InputType, Int } from '@nestjs/graphql';
import { z } from 'zod';
import { Create{{ pascalCase name }}InputZod } from './Create{{ pascalCase name }}Input';
import { Find{{ pascalCase name }}ByIdInputZod } from './Find{{ pascalCase name }}ByIdInput';

export const Update{{ pascalCase name }}InputZod = z
  .object({})
  .merge(Find{{ pascalCase name }}ByIdInputZod)
  .merge(Create{{ pascalCase name }}InputZod.partial());

export type IUpdate{{ pascalCase name }}Input = z.infer<typeof Update{{ pascalCase name }}InputZod>;

@InputType('Update{{ pascalCase name }}Input')
export class Update{{ pascalCase name }}InputType implements IUpdate{{ pascalCase name }}Input {
  @Field(() => Int)
  id!: number;
}
